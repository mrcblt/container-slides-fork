stages:
- check
- build
- test
- package
- deploy

default:
  image: golang:1.17.9

lint:
  stage: check
  script:
  - go fmt .

audit:
  stage: check
  script:
  - go vet .

renovate:
  stage: check
  rules:
  - if: '$CI_PIPELINE_SOURCE == "schedule" && $RENOVATE'
  image: renovate/renovate:32.52.2
  script: |
    renovate --platform gitlab \
        --endpoint https://gitlab.seatN.inmylab.de \
        --token $TOKEN \
        --autodiscover true \
        --autodiscover-filter "<GROUP>/<PROJECT>"

.build-go:
  parallel:
    matrix:
    - GOOS: linux
      GOARCH: amd64
    - GOOS: linux
      GOARCH: arm64
  script:
  - |
    go build \
        -ldflags "-X main.Version=${CI_COMMIT_REF_NAME} -X main.Author=${AUTHOR}" \
        -o hello-${GOOS}-${GOARCH} \
        .
    mv hello-$(go env GOOS)-$(go env GOARCH) hello

build:
  stage: build
  extends: .build-go
  artifacts:
    paths:
    - hello*

test:
  stage: test
  image: alpine
  script:
  - ./hello

package:
  image: docker:20.10.16
  stage: package
  services:
  - name: docker:20.10.16-dind
    command: [ "dockerd", "--host", "tcp://0.0.0.0:2375" ]
  before_script:
  - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
  script:
  - docker build --tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" .
  - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"

deploy:
  stage: deploy
  rules:
  - if: $CI_PIPELINE_SOURCE == $CI_DEFAULT_BRANCH
  image: alpine
  script:
  - cp hello public
  artifacts:
    paths:
    - public
